// <auto-generated />
using System;
using CSharpBanking;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSharpBanking.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220126162148_InitialSetup")]
    partial class InitialSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CSharpBanking.Models.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Inserted")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("CSharpBanking.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PinCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Customer_Id")
                        .IsUnique()
                        .HasFilter("[Customer_Id] IS NOT NULL");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CSharpBanking.Models.Customer", b =>
                {
                    b.HasOne("CSharpBanking.Models.BankAccount", "BankAccount")
                        .WithOne("Customer")
                        .HasForeignKey("CSharpBanking.Models.Customer", "Customer_Id");

                    b.Navigation("BankAccount");
                });

            modelBuilder.Entity("CSharpBanking.Models.BankAccount", b =>
                {
                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
